@model GroupProject.ViewModels.DeveloperViewModels.ProfilePageViewModels.ExperienceProfilePageViewModel
<div id="Experience">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close form-close" data-dismiss="modal">&times;</button>
                <h4 id="expFormTitle" class="modal-title">Add Experience</h4>
            </div>
            <div class="modal-body">
                <form id="ExperienceForm">
                    <div class="form-group">
                        @Html.HiddenFor(ex => ex.ExperienceID)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.JobTitle)
                        @Html.TextBoxFor(ex => ex.JobTitle, new { @class = "form-control" })
                        @Html.ValidationMessageFor(ex => ex.JobTitle, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <input type="hidden" name="CompanyWorkingID" value="" />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(ex => ex.CompanyName)

                        <input list="companies" name="CompanyName" class="form-control" id="company" placeholder="Enter or select a Company's name">
                        <datalist id="companies">
                            @foreach (var company in Model.CompaniesToChoose)
                            {
                                <option data-company-id="@company.CompanyID" value="@company.CompanyName"></option>
                            }
                        </datalist>
                    </div>

                    <div class="form-group">
                        <input type="hidden" name="CompanyWorkingID" value="" />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StartYear)
                        <input type="date" class="form-control valid" data-val="true" data-val-required="You must enter a Start Date!" id="StartYear" name="StartYear" value="@(Model.StartYear != DateTime.MinValue  ? Model.StartYear.ToString("yyyy-MM-dd") :"")">
                        @Html.ValidationMessageFor(m => m.StartYear, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.EndYear)
                        <input class="form-control valid" data-val="true" id="EndYear" name="EndYear" type="date" value="@(Model.EndYear.HasValue ? Model.EndYear.Value.ToString("yyyy-MM-dd") :"" )">
                        @Html.ValidationMessageFor(m => m.EndYear, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(ex => ex.ExperienceType)
                        @Html.EnumDropDownListFor(ex => ex.ExperienceType, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button class="btn btn-primary submit-profile-page-forms" value="4">Save</button>
                            <button type="button" class="btn btn-default form-close" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>

                </form>

            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/devProfileCompany")
