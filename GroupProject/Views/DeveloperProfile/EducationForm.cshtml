@model GroupProject.ViewModels.DeveloperViewModels.ProfilePageViewModels.EducationProfilePageViewModel
<div id="Education">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close fa fa-times" data-dismiss="modal"></button>
                <h4 id="eduFormTitle" class="modal-title">Education Details</h4>
            </div>
            <div class="modal-body">
                <form id="EducationForm">
                    <div class="form-group">
                        @Html.HiddenFor(ed => ed.EducationID)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(ed => ed.School)
                        @Html.TextBoxFor(ed => ed.School, new { @class = "form-control" })
                        @Html.ValidationMessageFor(ed => ed.School, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(ed => ed.Degree)
                        @Html.TextBoxFor(ed => ed.Degree, new { @class = "form-control" })
                        @Html.ValidationMessageFor(ed => ed.Degree, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(ed => ed.Field)
                        @Html.TextBoxFor(ed => ed.Field, new { @class = "form-control" })
                        @Html.ValidationMessageFor(ed => ed.Field, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(ed => ed.Grade)
                        @Html.TextBoxFor(ed => ed.Grade, new { @class = "form-control" })
                        @Html.ValidationMessageFor(ed => ed.Grade, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StartYear)
                        <input type ="date" class="form-control valid" data-val="true" data-val-required="You must enter a Start Date!" id="StartYear" name="StartYear" value="@(Model.StartYear != DateTime.MinValue  ? Model.StartYear.ToString("yyyy-MM-dd") :"")">                    
                        @Html.ValidationMessageFor(m => m.StartYear, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.EndYear)
                        <input class="form-control valid" data-val="true"  id="EndYear" name="EndYear" type="date" value="@(Model.EndYear.HasValue ? Model.EndYear.Value.ToString("yyyy-MM-dd") :"" )">
                        @Html.ValidationMessageFor(m => m.EndYear, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button class="btn btn-primary submit-profile-page-forms" value="3">Save</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>

                </form>
            </div>

        </div>
    </div>
</div>


@Scripts.Render("~/bundles/jqueryval")
